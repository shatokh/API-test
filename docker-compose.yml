services:
  api:
    env_file:
      - .env.docker
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    image: myapp:prod
    ports:
      - "${PORT}:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    depends_on:
      - mongo
    networks:
      - backend
      - monitoring

  mongo:
    env_file:
      - .env.docker
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - backend

volumes:
  mongo_data:

networks:
  backend:
    driver: bridge
  monitoring:
    driver: bridge
